{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/NewPerson/NewPerson.tsx","components/PeopleList/PeopleList.tsx","components/PeoplePage/PeoplePage.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","name","slug","sex","to","classNames","NewPerson","selectedPerson","born","died","fatherName","motherName","mother","father","PeopleList","people","useParams","map","findParent","parentName","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","newError","setNewError","noPeople","length","loadPeople","peopleWithParents","useEffect","Navigation","role","isActive","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"gRASO,SAASA,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,iBCZYQ,EAAS,kBACpB,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,E,gBCMTC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,IAEpB,OACE,cAAC,IAAD,CACEC,GAAE,kBAAaF,GACfJ,UAAWO,IAAW,CAAE,kBAA2B,MAARF,IAF7C,SAIGF,GAGN,ECVYK,EAA6B,SAAC,GAAgC,IAA9BN,EAA6B,EAA7BA,OAAQO,EAAqB,EAArBA,eAEjDJ,EAQEH,EARFG,IACAK,EAOER,EAPFQ,KACAC,EAMET,EANFS,KACAC,EAKEV,EALFU,WACAC,EAIEX,EAJFW,WACAC,EAGEZ,EAHFY,OACAC,EAEEb,EAFFa,OACAX,EACEF,EADFE,KAGF,OACE,qBACE,UAAQ,SACRJ,UAAWO,IACT,CAAE,yBAA0BH,IAASK,IAHzC,UAME,6BACE,cAAC,EAAD,CAAYP,OAAQA,MAGtB,6BAAKG,IACL,6BAAKK,IACL,6BAAKC,IACL,6BACGG,EACI,cAAC,EAAD,CAAYZ,OAAQY,IACpBD,GAAc,MAErB,oBACEb,UAAU,GADZ,SAGGe,EACI,cAAC,EAAD,CAAYb,OAAQa,IACpBH,GAAc,QAI1B,ECzCYI,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCR,EAAmBS,cAAnBT,eAER,OACE,wBACE,UAAQ,cACRT,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGiB,EAAOE,KAAI,SAACjB,GAAD,OACV,cAAC,EAAD,CAEEA,OAAQA,EACRO,eAAgBA,GAFXP,EAAOE,KAFJ,QAUnB,EChCKgB,EAAa,SAACH,EAAkBI,GACpC,OAAOJ,EAAOK,MAAK,SAACpB,GAAD,OAAYA,EAAOC,OAASkB,CAA5B,GACpB,EAEYE,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOP,EAAP,KAAeQ,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAA6B,IAAlBb,EAAOc,OAElBC,EAAU,iDAAG,yHAEQ1C,IAFR,OAETO,EAFS,OAIToC,EAAoBpC,EAASsB,KAAI,SAACjB,GAAD,mBAAC,eACnCA,GADkC,IAErCY,OAAQM,EAAWvB,EAAUK,EAAOW,YACpCE,OAAQK,EAAWvB,EAAUK,EAAOU,aAHC,IAMvCa,EAAUQ,GAVK,gDAYfJ,GAAY,GAZG,yBAcfF,GAAa,GAdE,4EAAH,qDAwBhB,OANAO,qBAAU,WACRP,GAAa,GAEbK,GACD,GAAE,IAGD,qCACE,oBAAIhC,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SACG0B,EACG,cAAC,EAAD,IAEA,qCACGE,GAEG,mBAAG,UAAQ,qBAAX,kCAKHE,IACKF,EAEF,mBAAG,UAAQ,kBAAX,+CAIA,cAAC,EAAD,CAAYX,OAAQA,aAQvC,ECtEYkB,EAAa,WACxB,OACE,qBACE,UAAQ,MACRnC,UAAU,iCACVoC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKpC,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEM,GAAG,IACHN,UAAW,gBAAGqC,EAAH,EAAGA,SAAH,OAAkB9B,IAC3B,cAAe,CAAE,8BAA+B8B,GADvC,EAFb,kBAQA,cAAC,IAAD,CACE/B,GAAG,UACHN,UAAW,gBAAGqC,EAAH,EAAGA,SAAH,OAAkB9B,IAC3B,cAAe,CAAE,8BAA+B8B,GADvC,EAFb,0BAYT,EC5BYC,EAAM,WACjB,OACE,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMtC,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEuC,KAAK,IACLC,QAAS,oBAAIxC,UAAU,QAAd,yBAGX,eAAC,IAAD,CAAOuC,KAAK,UAAUC,QAAS,cAAC,EAAD,IAA/B,UACE,cAAC,IAAD,CACED,KAAK,kBACLC,QAAS,cAAC,EAAD,MAGX,cAAC,IAAD,CACEC,OAAK,EACLD,QAAS,cAAC,EAAD,SAGb,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUlC,GAAG,IAAIoC,SAAO,MACrD,cAAC,IAAD,CACEH,KAAK,IACLC,QAAS,oBAAIxC,UAAU,QAAd,uCAOtB,EC/BD2C,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.44ddeca4.chunk.js","sourcesContent":["import { Person } from './types/Person';\r\n\r\n// eslint-disable-next-line max-len\r\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\r\n\r\nfunction wait(delay: number) {\r\n  return new Promise(resolve => setTimeout(resolve, delay));\r\n}\r\n\r\nexport function getPeople(): Promise<Person[]> {\r\n  // keep this delay for testing purpose\r\n  return wait(500)\r\n    .then(() => fetch(API_URL))\r\n    .then(response => response.json());\r\n}\r\n","import './Loader.scss';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person;\n  selectedPerson: string | undefined;\n};\n\nexport const NewPerson: React.FC<Props> = ({ person, selectedPerson }) => {\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother,\n    father,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': slug === selectedPerson },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (<PersonLink person={mother} />)\n          : (motherName || '-')}\n      </td>\n      <td\n        className=\"\"\n      >\n        {father\n          ? (<PersonLink person={father} />)\n          : (fatherName || '-')}\n      </td>\n    </tr>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { NewPerson } from '../NewPerson';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const { selectedPerson } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <NewPerson\n            key={person.slug}\n            person={person}\n            selectedPerson={selectedPerson}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleList } from '../PeopleList';\n\nconst findParent = (people: Person[], parentName: string | null) => {\n  return people.find((person) => person.name === parentName);\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [newError, setNewError] = useState(false);\n\n  const noPeople = people.length === 0;\n\n  const loadPeople = async () => {\n    try {\n      const response = await getPeople();\n\n      const peopleWithParents = response.map((person) => ({\n        ...person,\n        mother: findParent(response, person.motherName),\n        father: findParent(response, person.fatherName),\n      }));\n\n      setPeople(peopleWithParents);\n    } catch (error) {\n      setNewError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? <Loader />\n            : (\n              <>\n                {newError\n                  && (\n                    <p data-cy=\"peopleLoadingError\">\n                      Something went wrong\n                    </p>\n                  )}\n\n                {noPeople\n                  && !newError\n                  ? (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )\n                  : <PeopleList people={people} />}\n\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item', { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames(\n              'navbar-item', { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n\n            <Route path=\"/people\" element={<PeoplePage />}>\n              <Route\n                path=\":selectedPerson\"\n                element={<PeoplePage />}\n              />\n\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n            </Route>\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}